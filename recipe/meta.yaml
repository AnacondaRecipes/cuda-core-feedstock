{% set name = "cuda-core" %}
{% set version = "0.1.1" %}
{% set number = 0 %}

# Note: Adding these due to use of older cuda-core version
{% set cuda_python_version = "12.8.0" %}

{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win64]
{% set subdir = "" %}
{% set subdir = os.sep.join(["", "targets", target_name]) %}  # [linux64 or aarch64]
{% set subdir = os.sep.join(["", "Library"]) %}               # [win64]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  # url: https://github.com/NVIDIA/cuda-python/releases/download/{{ name }}-v{{ version }}/cuda-python-{{ name }}-v{{ version }}.tar.gz
  # sha256: 47a6181f1a8fa1db2df31251c0bb654558b3eddf47c41964bfa39965a46c7b41
  # Note: Starting with cuda-core v0.2.0, the above URL can be used
  url: https://github.com/NVIDIA/cuda-python/releases/download/v{{ cuda_python_version }}/cuda-python-v{{ cuda_python_version }}.tar.gz
  sha256: 6cc8db1e65a1f995e289b64f9b9bff4362321d36ecf9b54eb192d0781475fbca

build:
  number: {{ number }}
  string: cuda{{ cuda_major_version }}_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}
  skip: true  # [py < 310 or osx]
  script_env:
    - CUDA_PATH={{ PREFIX ~ subdir }}
  # Do not include cython-generated source files
  ignore_prefix_files:
    - '**/*.c'
    - '**/*.cpp'
    - '**/*.so.c'

requirements:
  build:
    - {{ stdlib('c') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - pip
    - setuptools
    - cython >=3.0
    # cuda-core depends on cuda-bindings and cuda-bindings is minor version compatible with CUDA Toolkit >=12
    # Ref: https://docs.nvidia.com/deploy/cuda-compatibility/minor-version-compatibility.html
    - {{ pin_compatible('cuda-bindings', min_pin='x', max_pin='x') }}
  run:
    - python
    - numpy
    - {{ pin_compatible("cuda-bindings", min_pin="x", max_pin="x") }}

test:
  requires:
    - pip
  imports:
    - cuda.core.experimental
  commands:
    - pip check
    - python -c "from cuda.core.experimental import Device; print(dir(Device))"
    - python -c "from cuda.core.experimental import utils; print(dir(utils))"

about:
  home: https://nvidia.github.io/cuda-python/cuda-core
  # Note: Check for cuda-core license, it might be Apache-2.0 in the future releases
  license: LicenseRef-NVIDIA-SOFTWARE-LICENSE
  license_file: LICENSE
  summary: Pythonic CUDA module (experimental)
  description: |
    cuda.core bridges Python's productivity with CUDA's performance through intuitive and pythonic APIs.
    The mission is to provide users full access to all of the core CUDA features in Python, such as
    runtime control, compiler and linker.
  doc_url: https://nvidia.github.io/cuda-python/cuda-core
  dev_url: https://github.com/NVIDIA/cuda-python

extra:
  recipe-maintainers:
    - conda-forge/cuda-python
    - bdice
    - leofang
    - kkraus14
